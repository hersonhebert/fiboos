pwd
path.expand()
pwd()
getwd()
py_run_string("import pymol")
py_run_string("import pymol")
library(reticulate)
pymol = import('pymol')
py_run_string("import pymol")
py_run_string("pymol.pymol_argv = ['pymol', '-c']") # Use '-c' para modo de console
py_run_string("pymol.finish_launching(['pymol'])")
py_run_string("from pymol import cmd")
py_run_string("cmd.fetch('1ppf')") # Substitua 'pdb_code' pelo código do PDB desejado
py_run_string("pymol.pymol_argv = ['pymol', '-c']") # Use '-c' para modo de console
py_run_string("pymol.finish_launching(['pymol'])")
py_run_string("from pymol import cmd")
py_run_string("cmd.fetch('1ppf')") # Substitua 'pdb_code' pelo código do PDB desejado
library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
library(tidyverse)
glimpse(flights)
flights
flights |>
filter(dest == "IAH") |>
group_by(year, month, day) |>
summarize(
arr_delay = mean(arr_delay, na.rm = TRUE)
)
flights |>
mutate(
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
.after = day
)
flights %>%
mutate(
gain = dep_delay - arr_delay,
speed = distance / air_time * 60,
.after = day
)
flights |>
mutate(
gain = dep_delay - arr_delay,
hours = air_time / 60,
gain_per_hour = gain / hours,
.keep = "used"
)
flights |>
group_by(month)
x = flights |>
group_by(month)
View(x)
x[154]
flights |>
group_by(month) |>
summarize(
avg_delay = mean(dep_delay)
)
flights |>
group_by(month) |>
summarize(
delay = mean(dep_delay, na.rm = TRUE)
)
n()
n(flights)
n(flights$year)
flights %>% n()
flights %>% n(.)
flights %>% n(year)
flights |>
group_by(month) |>
summarize(
delay = mean(dep_delay, na.rm = TRUE),
n = n()
)
n?
?n
daily_flights <- daily |>
summarize(
n = n(),
.groups = "drop_last"
)
daily <- flights |>
group_by(year, month, day)
daily
daily_flights <- daily |>
summarize(n = n())
daily_flights <- daily |>
summarize(
n = n(),
.groups = "drop_last"
)
View(daily_flights)
flights |>
summarize(
delay = mean(dep_delay, na.rm = TRUE),
n = n(),
.by = month
)
rm(list = all())
rm(list = ls(all))
rm(list = ls())
cls()
ls
library(nycflights13)
library(tidyverse)
library(nycflights13)
library(nycflights13)
library(tidyverse)
flights
glimpse()
glimpse(flights)
flights |>
filter(dest == "IAH") |>
group_by(year, month, day) |>
summarize(
arr_delay = mean(arr_delay, na.rm = TRUE)
)
flights |>
filter(dest == "IAH") |>
group_by(year, month, day) |>
summarize(
arr_delay = mean(arr_delay, na.rm = TRUE)
)
voos =
flights |>
filter(dest == "IAH") |>
group_by(year, month, day) |>
summarize(
arr_delay = mean(arr_delay, na.rm = TRUE)
)
flights |>
filter(dep_delay > 120)
flights |>
filter(month == 1 & day == 1)
flights |>
filter(month == 1 | month == 2)
flights |>
filter(month %in% c(1, 2))
flights |>
filter(month = 1)
flights |>
filter(month == 1)
flights |>
filter(month == 1 | 2)
flights |>
filter(month == 1 | 2)
flights |>
arrange(year, month, day, dep_time)
flights |>
distinct()
flights |>
mutate(
gain = dep_delay - arr_delay,
speed = distance / air_time * 60
)
flight = flights
flight = flights$speed = flights$distance / flights$air_time * 60
flight = flights
flight$velocidade =  flights$distance / flights$air_time * 60
View(flight)
flights |>
mutate(
gain = dep_delay - arr_delay,
hours = air_time / 60,
gain_per_hour = gain / hours,
.keep = "used"
)
flights |>
select(year, month, day)
flights |>
select(year, month, day, dep_delay)
flights |>
select(day, month,year, dep_delay)
flights
da
flights |>
select(year:day)
flights |>
select(year:dep_time)
flights |>
select(year:arr_time)
flights |>
select(where(is.character))
flights |>
rename(tail_num = tailnum)
flights |>
select(tail_num = tailnum)
flights |>
select(tail_num = tailnum)
flights |>
relocate(time_hour, air_time)
flights |>
relocate(starts_with("arr"), .before = dep_time)
flights %>%
relocate(starts_with("arr"), .before = dep_time)
flights |>
filter(dest == "IAH") |>
mutate(speed = distance / air_time * 60) |>
select(year:day, dep_time, carrier, flight, speed) |>
arrange(desc(speed))
flights |>
group_by(month)
flights |>
group_by(month) |>
summarize(
avg_delay = mean(dep_delay)
)
1/NA
NA+1
NA*2
flights |>
group_by(month) |>
summarize(
delay = mean(dep_delay, na.rm = TRUE)
)
flights |>
group_by(month) |>
summarize(
delay = mean(dep_delay, na.rm = TRUE),
n = n()
)
daily <- flights |>
group_by(year, month, day)
daily_flights <- daily |>
summarize(n = n())
daily_flights <- daily |>
summarize(
n = n(),
.groups = "drop_last"
)
daily_flights <- daily |>
summarize(
n = n(),
.groups = "drop_last"
)
daily |>
summarize(
n = n(),
.groups = "drop_last"
)
write_csv("dados.csv",flights)
write_csv(flights,"dados.csv")
dir()
flights
write_csv(flights, "dados.csv")
teste = c(1,0,0,1,1,0)
library(tidyverse)
library(readr)
library(dplyr)
teste = as_tibble(teste)
View(teste)
teste <- teste %>%
mutate(value = ifelse(value == 1, TRUE, FALSE))
data()
x = fibos::read_raydist()
x = fibos::read_raydist("~/Documentos/exe/")
x = fibos::read_raydist("~/Documentos/exe/raydist.lst")
fibos::visualize(x, "1ppf", "dots")
fibos::visualize(x, "1ppf.pdb", "dots")
fibos::visualize(x, "1ppf.pdb", "rays")
fibos::visualize(x, "1ppf", "rays")
system.file("libs", "os.so", package = "fibos")
setwd("~/Documentos/fibos_r")
library(devtools)
library(devtools)
install.packages(c("boot", "callr", "chromote", "commonmark", "cowplot", "data.table", "DBI", "ggplot2", "httpuv", "interp", "pkgload", "plotly", "renv", "reticulate", "roxygen2", "rvest", "sp", "tidyr", "timechange", "usethis", "uuid", "V8", "viridis", "withr", "xfun", "xts", "zip"))
library(devtools)
